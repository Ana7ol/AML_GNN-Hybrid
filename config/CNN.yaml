# config_ssl.yaml

# DDP
distributed_backend: "nccl"  # or "gloo" for CPU / debugging
num_cpu_workers: 4

# Data
data_path: "LI-Small_Trans.csv" # Your data file

# Augmentation for SSL
aug_noise_level: 0.03
aug_mask_fraction: 0.15

# SSL Model Architecture
# CNNGRUEncoder (for individual transaction features treated as a sequence)
# encoder_input_dim will be set dynamically after preprocessing
encoder_cnn_channels1: 32
encoder_cnn_channels2: 64
encoder_cnn_channels3: 128
encoder_cnn_channels4: 256
encoder_kernel_size: 9
encoder_gru_hidden_size: 128
encoder_gru_layers: 2 # Reduced for potentially faster training, adjust as needed
encoder_bidirectional_gru: true
encoder_embedding_dim: 64   # Final output dim of the SSL encoder

# Projection Head
projection_hidden_dim: 64 # Typically same as encoder_embedding_dim
projection_output_dim: 16 # Low-dimensional projection for contrastive loss

# SSL Training
ssl_epochs: 5 # Adjust as needed
ssl_batch_size_per_gpu: 128
ssl_learning_rate: 0.001
ssl_temperature: 0.1 # For NTXentLoss
ssl_weight_decay: 0.000001

# Checkpointing
output_dir: "./ssl_output"
encoder_save_filename: "ssl_encoder.pth"

# Downstream Evaluation (RandomForest Probe)
rf_test_size: 0.3
rf_random_state: 42
# RandomForest parameters are fixed in code for simplicity

# General
print_interval_batches_ssl: 100 # For SSL training logging
# visualization_enabled: false # Plots are not included in this version
